const express = require('express');
const app = express();
const cors = require('cors');
const fs = require('fs');
const path = require('path');

const uploadsDir = path.join(__dirname, 'uploads');

app.use(cors());
app.use(express.json());

app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  next();
});

// Endpoint per ottenere l'elenco dei file PDF
app.get('/pdf-files', (req, res) => {
  // Leggi i file presenti nella cartella 'uploads'
  fs.readdir(uploadsDir, (err, files) => {
    if (err) {
      console.error('Errore durante la lettura dei file:', err);
      res.status(500).send('Errore durante il recupero dell\'elenco dei file');
    } else {
      // Filtra solo i file con estensione .pdf
      const pdfFiles = files.filter(file => path.extname(file).toLowerCase() === '.pdf');
      // Restituisci l'elenco dei file PDF al frontend
      res.json(pdfFiles);
    }
  });
});

// Endpoint per ottenere le informazioni sui file PDF
app.get('/pdf-file-info/:fileName', (req, res) => {
  const fileName = req.params.fileName;
  const filePath = path.join(uploadsDir, fileName);
  fs.stat(filePath, (err, stats) => {
    if (err) {
      console.error('Errore durante il recupero delle informazioni del file:', err);
      res.status(500).send('Errore durante il recupero delle informazioni del file');
    } else {
      const fileDate = stats.birthtime; // Ottieni la data di creazione del file
      res.json({ date: fileDate.toDateString() }); // Invia solo la data (giorno/mese/anno)
    }
  });
});

// Avvio del server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
